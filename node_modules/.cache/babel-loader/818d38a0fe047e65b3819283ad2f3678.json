{"ast":null,"code":"import { v4 as uuidv4 } from \"uuid\";\nexport class FakeBookApi {\n  constructor() {\n    this._collection = [{\n      id: \"037d0623-5f08-43bf-bf31-01adbcda29e5\",\n      title: \"Some test book 1\",\n      author: \"Some author 1\",\n      publishingHouse: \"Some publishing house 1\",\n      pages: 234\n    }, {\n      id: \"e8519bd9-4bc6-4363-be34-731f09095fdd\",\n      title: \"Some test book 2\",\n      author: \"Some author 1\",\n      publishingHouse: \"Some publishing house 2\",\n      pages: 258\n    }, {\n      id: \"f331954d-a8b2-439f-8a81-caa12f4843b8\",\n      title: \"Some test book 3\",\n      author: \"Some author 2\",\n      publishingHouse: \"Some publishing house 1\",\n      pages: 721\n    }, {\n      id: \"032c23db-89e1-4cc9-a811-6c8a4ee409d2\",\n      title: \"Some test book 4\",\n      author: \"Some author 3\",\n      publishingHouse: \"Some publishing house 3\",\n      pages: 125\n    }, {\n      id: \"ea49ccc5-5bd7-4f41-962c-db26e497053b\",\n      title: \"Some test book 5\",\n      author: \"Some author 4\",\n      publishingHouse: \"Some publishing house 4\",\n      pages: 853\n    }];\n  }\n\n  fetchBooks() {\n    return new Promise(resolve => resolve(this._collection));\n  }\n\n  addNewBook(newBook) {\n    return new Promise(resolve => {\n      const book = {\n        id: uuidv4(),\n        ...newBook\n      };\n\n      this._collection.push(book);\n\n      resolve(book);\n    });\n  }\n\n  removeBook(bookId) {\n    return new Promise(resolve => {\n      const initialLength = this._collection.length;\n      this._collection = [...this._collection.filter(book => book.id !== bookId)];\n      resolve(this._collection.length !== initialLength);\n    });\n  }\n\n}","map":{"version":3,"sources":["C:/Users/slawe/OneDrive/Pulpit/pretius/src/data/FakeBookApi.js"],"names":["v4","uuidv4","FakeBookApi","_collection","id","title","author","publishingHouse","pages","fetchBooks","Promise","resolve","addNewBook","newBook","book","push","removeBook","bookId","initialLength","length","filter"],"mappings":"AAAA,SAASA,EAAE,IAAIC,MAAf,QAA6B,MAA7B;AAEA,OAAO,MAAMC,WAAN,CAAkB;AAAA;AAAA,SACvBC,WADuB,GACT,CACZ;AACEC,MAAAA,EAAE,EAAE,sCADN;AAEEC,MAAAA,KAAK,EAAE,kBAFT;AAGEC,MAAAA,MAAM,EAAE,eAHV;AAIEC,MAAAA,eAAe,EAAE,yBAJnB;AAKEC,MAAAA,KAAK,EAAE;AALT,KADY,EAQZ;AACEJ,MAAAA,EAAE,EAAE,sCADN;AAEEC,MAAAA,KAAK,EAAE,kBAFT;AAGEC,MAAAA,MAAM,EAAE,eAHV;AAIEC,MAAAA,eAAe,EAAE,yBAJnB;AAKEC,MAAAA,KAAK,EAAE;AALT,KARY,EAeZ;AACEJ,MAAAA,EAAE,EAAE,sCADN;AAEEC,MAAAA,KAAK,EAAE,kBAFT;AAGEC,MAAAA,MAAM,EAAE,eAHV;AAIEC,MAAAA,eAAe,EAAE,yBAJnB;AAKEC,MAAAA,KAAK,EAAE;AALT,KAfY,EAsBZ;AACEJ,MAAAA,EAAE,EAAE,sCADN;AAEEC,MAAAA,KAAK,EAAE,kBAFT;AAGEC,MAAAA,MAAM,EAAE,eAHV;AAIEC,MAAAA,eAAe,EAAE,yBAJnB;AAKEC,MAAAA,KAAK,EAAE;AALT,KAtBY,EA6BZ;AACEJ,MAAAA,EAAE,EAAE,sCADN;AAEEC,MAAAA,KAAK,EAAE,kBAFT;AAGEC,MAAAA,MAAM,EAAE,eAHV;AAIEC,MAAAA,eAAe,EAAE,yBAJnB;AAKEC,MAAAA,KAAK,EAAE;AALT,KA7BY,CADS;AAAA;;AAuCvBC,EAAAA,UAAU,GAAG;AACX,WAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAaA,OAAO,CAAC,KAAKR,WAAN,CAAhC,CAAP;AACD;;AAEDS,EAAAA,UAAU,CAACC,OAAD,EAAU;AAClB,WAAO,IAAIH,OAAJ,CAAaC,OAAD,IAAa;AAC9B,YAAMG,IAAI,GAAG;AAAEV,QAAAA,EAAE,EAAEH,MAAM,EAAZ;AAAgB,WAAGY;AAAnB,OAAb;;AACA,WAAKV,WAAL,CAAiBY,IAAjB,CAAsBD,IAAtB;;AAEAH,MAAAA,OAAO,CAACG,IAAD,CAAP;AACD,KALM,CAAP;AAMD;;AAEDE,EAAAA,UAAU,CAACC,MAAD,EAAS;AACjB,WAAO,IAAIP,OAAJ,CAAaC,OAAD,IAAa;AAC9B,YAAMO,aAAa,GAAG,KAAKf,WAAL,CAAiBgB,MAAvC;AAEA,WAAKhB,WAAL,GAAmB,CACjB,GAAG,KAAKA,WAAL,CAAiBiB,MAAjB,CAAyBN,IAAD,IAAUA,IAAI,CAACV,EAAL,KAAYa,MAA9C,CADc,CAAnB;AAIAN,MAAAA,OAAO,CAAC,KAAKR,WAAL,CAAiBgB,MAAjB,KAA4BD,aAA7B,CAAP;AACD,KARM,CAAP;AASD;;AA9DsB","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\n\nexport class FakeBookApi {\n  _collection = [\n    {\n      id: \"037d0623-5f08-43bf-bf31-01adbcda29e5\",\n      title: \"Some test book 1\",\n      author: \"Some author 1\",\n      publishingHouse: \"Some publishing house 1\",\n      pages: 234,\n    },\n    {\n      id: \"e8519bd9-4bc6-4363-be34-731f09095fdd\",\n      title: \"Some test book 2\",\n      author: \"Some author 1\",\n      publishingHouse: \"Some publishing house 2\",\n      pages: 258,\n    },\n    {\n      id: \"f331954d-a8b2-439f-8a81-caa12f4843b8\",\n      title: \"Some test book 3\",\n      author: \"Some author 2\",\n      publishingHouse: \"Some publishing house 1\",\n      pages: 721,\n    },\n    {\n      id: \"032c23db-89e1-4cc9-a811-6c8a4ee409d2\",\n      title: \"Some test book 4\",\n      author: \"Some author 3\",\n      publishingHouse: \"Some publishing house 3\",\n      pages: 125,\n    },\n    {\n      id: \"ea49ccc5-5bd7-4f41-962c-db26e497053b\",\n      title: \"Some test book 5\",\n      author: \"Some author 4\",\n      publishingHouse: \"Some publishing house 4\",\n      pages: 853,\n    },\n  ];\n\n  fetchBooks() {\n    return new Promise((resolve) => resolve(this._collection));\n  }\n\n  addNewBook(newBook) {\n    return new Promise((resolve) => {\n      const book = { id: uuidv4(), ...newBook };\n      this._collection.push(book);\n\n      resolve(book);\n    });\n  }\n\n  removeBook(bookId) {\n    return new Promise((resolve) => {\n      const initialLength = this._collection.length;\n\n      this._collection = [\n        ...this._collection.filter((book) => book.id !== bookId),\n      ];\n\n      resolve(this._collection.length !== initialLength);\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module"}